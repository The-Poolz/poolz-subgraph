name: "Deploy Subgraph"

# Workflow can be triggered manually or via workflow dispatch
on:
  workflow_dispatch:
    inputs:
      chain:
        description: "Target blockchain network"
        required: true
        type: choice
        options:
          - "matic"
          - "base"
          - "unichain"
          - "arbi"
        default: "matic"
      
      version:
        description: "Version label for the deployment"
        required: true
        type: string
        default: "v0.0.1"

jobs:
  deploy:
    name: "Deploy Subgraph to ${{ inputs.chain }}"
    runs-on: ubuntu-latest
    
    steps:
      # Checkout repository
      - name: "Checkout code"
        uses: actions/checkout@v4

      # Setup Node.js environment
      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: "latest"
          cache: "yarn"

      # Install dependencies
      - name: "Install dependencies"
        run: yarn install

      # Install Graph CLI globally
      - name: "Install Graph CLI"
        run: yarn global add @graphprotocol/graph-cli

      # Set up authentication for Matic
      - name: "Authenticate with The Graph (Matic)"
        if: inputs.chain == 'matic'
        env:
          GRAPH_DEPLOY_KEY_MATIC: ${{ secrets.GRAPH_DEPLOY_KEY_MATIC }}
        run: |
          graph auth $GRAPH_DEPLOY_KEY_MATIC

      # Set up authentication for Base
      - name: "Authenticate with The Graph (Base)"
        if: inputs.chain == 'base'
        env:
          GRAPH_DEPLOY_KEY_BASE: ${{ secrets.GRAPH_DEPLOY_KEY_BASE }}
        run: |
          graph auth $GRAPH_DEPLOY_KEY_BASE

      # Set up authentication for Unichain
      - name: "Authenticate with The Graph (Unichain)"
        if: inputs.chain == 'unichain'
        env:
          GRAPH_DEPLOY_KEY_UNICHAIN: ${{ secrets.GRAPH_DEPLOY_KEY_UNICHAIN }}
        run: |
          graph auth $GRAPH_DEPLOY_KEY_UNICHAIN

      # Set up authentication for Arbitrum One
      - name: "Authenticate with The Graph (Arbitrum One)"
        if: inputs.chain == 'arbi'
        env:
          GRAPH_DEPLOY_KEY_ARBI: ${{ secrets.GRAPH_DEPLOY_KEY_ARBI }}
        run: |
          graph auth $GRAPH_DEPLOY_KEY_ARBI

      # Generate types and build for the specified chain
      - name: "Generate types and build subgraph"
        run: |
          yarn codegen
          yarn build:${{ inputs.chain }}

      # Deploy to The Graph Studio
      - name: "Deploy subgraph"
        run: |
          echo "Deploying poolzfinance${{ inputs.chain }} version ${{ inputs.version }} to ${{ inputs.chain }}"
          graph deploy poolzfinance${{ inputs.chain }} --version-label ${{ inputs.version }}
        
      # Output deployment information
      - name: "Deployment Summary"
        run: |
          echo "üöÄ Deployment completed successfully!"
          echo "üìä Subgraph: poolzfinance${{ inputs.chain }}"
          echo "üîó Chain: ${{ inputs.chain }}"
          echo "üè∑Ô∏è  Version: ${{ inputs.version }}"
          echo "üåê Studio URL: https://thegraph.com/studio/subgraph/poolzfinance${{ inputs.chain }}"